&
year >= 1920 &
year <= 2020) %>%
summarise(mean_exp = mean(life_exp)) %>%
ggplot(aes(x = year, y = mean_exp, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
pop_tot_t %>%
select(country, population, year) %>%
pivot_wider(names_from = "year",
names_prefix = "year_",
values_from = "population") %>%
mutate(pop_change = year_2020-year_1920) %>%
select(country, pop_change) %>%
arrange(desc(pop_change)) %>%
top_n(5, pop_change)
pop_tot_t %>%
group_by(year, country) %>%
filter(country == "China" |
country == "India" |
country == "United States" |
country == "Pakistan" |
country == "Indonesia"
&
year >= 1920 &
year <= 2020) %>%
summarise(mean_gr = mean(population)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
gdp_tot_t %>%
select(country, gdppercap, year) %>%
pivot_wider(names_from = "year",
names_prefix = "year_",
values_from = "gdppercap") %>%
mutate(gdppercap_change = year_2020-year_1920) %>%
select(country, gdppercap_change) %>%
arrange(desc(gdppercap_change)) %>%
top_n(5, gdppercap_change)
gdp_tot_t %>%
group_by(year, country) %>%
filter(country == "Qatat" |
country == "Luxembourg" |
country == "Singapore" |
country == "Brunei" |
country == "Ireland"
&
year >= 1920 &
year <= 2020) %>%
summarise(mean_gr = mean(gdppercap)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
life_expectancy_100 <- lifexpy_t %>%
filter(year <= 2020 & year >= 1920)
population_100 <- pop_tot_t %>%
filter(year <= 2020 & year >= 1920)
income_100 <- gdp_tot_t %>%
filter(year <= 2020 & year >= 1920)
gapminder_join <- inner_join(life_expectancy_100, population_100, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, income_100, by= c("country", "year"))
gapminder_join
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp)) + geom_point() + geom_smooth()
View(lifexpy)
View(lifexpy_t)
glimpse(lifexpy)
lifexpy_t %>%
group_by(country) %>%
filter(year >= 1920 & year <= 2020) %>%
summarise(mean_exp = mean(life_exp)) %>%
arrange(mean_exp) %>%
top_n(-5, mean_exp)
lifexpy_t %>%
group_by(year, country) %>%
filter(country == "Kuwait" |
country == "Kyrgyz Republic" |
country == "United States" |
country == "Turkmenistan" |
country == "Tajikistan"
&
year >= 1920 &
year <= 2020) %>%
summarise(mean_exp = mean(life_exp)) %>%
ggplot(aes(x = year, y = mean_exp, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Top 5 Biggest Change of Life Expectancy in all Countries",
y = "Mean Life Expectancy") + theme_classic()
pop_tot_t %>%
group_by(year, country) %>%
filter((country == "China" |
country == "India" |
country == "United States" |
country == "Pakistan" |
country == "Indonesia")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_gr = mean(population)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
pop_tot_t %>%
group_by(year, country) %>%
filter((country == "China" |
country == "India" |
country == "United States" |
country == "Pakistan" |
country == "Indonesia")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_gr = mean(population)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 90, hjust=.5)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
pop_tot_t %>%
group_by(year, country) %>%
filter((country == "China" |
country == "India" |
country == "United States" |
country == "Pakistan" |
country == "Indonesia")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_gr = mean(population)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust=.5)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
gdp_tot_t %>%
group_by(year, country) %>%
filter(country == "Qatat" |
country == "Luxembourg" |
country == "Singapore" |
country == "Brunei" |
country == "Ireland"
&
year >= 1920 &
year <= 2020) %>%
summarise(mean_gr = mean(gdppercap)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "GDP per Capita of Fastest 5 Countries",
y = "Mean GDP per Cap Growth") + theme_classic()
pop_tot_t %>%
group_by(year, country) %>%
filter((country == "China" |
country == "India" |
country == "United States" |
country == "Pakistan" |
country == "Indonesia")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_gr = mean(population)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=.1)) + labs(title = "Population Growth of Fastest 5 Countries",
y = "Mean Population Growth") + theme_classic()
life_expectancy_100 <- lifexpy_t %>%
filter(year <= 2020 & year >= 1920)
population_100 <- pop_tot_t %>%
filter(year <= 2020 & year >= 1920)
income_100 <- gdp_tot_t %>%
filter(year <= 2020 & year >= 1920)
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp)) + geom_point() + geom_smooth() + theme_classic()
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp)) + geom_point() + geom_smooth() + theme_classic() + titles(x= "GDP per Cap", y = "Life Expectancy", main = "GDP per Capita Compared to Life Expectancy")
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp)) + geom_point() + geom_smooth() + theme_classic() + labs(x= "GDP per Cap", y = "Life Expectancy", main = "GDP per Capita Compared to Life Expectancy")
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp)) + geom_point() + geom_smooth() + theme_classic() + labs(x= "GDP per Cap", y = "Life Expectancy", title = "GDP per Capita Compared to Life Expectancy")
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp, color = population)) + geom_point() + geom_smooth() + theme_classic() + labs(x= "GDP per Cap", y = "Life Expectancy", title = "GDP per Capita Compared to Life Expectancy")
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp, group = population)) + geom_point() + geom_smooth() + theme_classic() + labs(x= "GDP per Cap", y = "Life Expectancy", title = "GDP per Capita Compared to Life Expectancy")
gapminder_join %>%
ggplot(aes(x = gdppercap, y = life_exp, color = population)) + geom_point() + geom_smooth() + theme_classic() + labs(x= "GDP per Cap", y = "Life Expectancy", title = "GDP per Capita Compared to Life Expectancy")
lifexpy_t %>%
group_by(year, country) %>%
filter((country == "Kuwait" |
country == "Kyrgyz Republic" |
country == "United States" |
country == "Turkmenistan" |
country == "Tajikistan")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_exp = mean(life_exp)) %>%
ggplot(aes(x = year, y = mean_exp, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Top 5 Biggest Change of Life Expectancy in all Countries",
y = "Mean Life Expectancy") + theme_classic()
lifexpy_t %>%
group_by(year, country) %>%
filter((country == "Kuwait" |
country == "Kyrgyz Republic" |
country == "United States" |
country == "Turkmenistan" |
country == "Tajikistan")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_exp = mean(life_exp)) %>%
ggplot(aes(x = year, y = mean_exp, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Top 5 Biggest Change of Life Expectancy in all Countries",
y = "Mean Life Expectancy") + theme_classic() + coord_flip()
lifexpy_t %>%
group_by(year, country) %>%
filter((country == "Kuwait" |
country == "Kyrgyz Republic" |
country == "United States" |
country == "Turkmenistan" |
country == "Tajikistan")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_exp = mean(life_exp)) %>%
ggplot(aes(x = year, y = mean_exp, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "Top 5 Biggest Change of Life Expectancy in all Countries",
y = "Mean Life Expectancy") + theme_classic()
gdp_tot_t %>%
group_by(year, country) %>%
filter((country == "Qatar" |
country == "Luxembourg" |
country == "Singapore" |
country == "Brunei" |
country == "Ireland")
&
(year >= 1920 &
year <= 2020)) %>%
summarise(mean_gr = mean(gdppercap)) %>%
ggplot(aes(x = year, y = mean_gr, group=country, color= country)) + geom_line() +
theme(axis.text.x = element_text(angle = 60, hjust=1)) + labs(title = "GDP per Capita of Fastest 5 Countries",
y = "Mean GDP per Cap Growth") + theme_classic()
`copier+maintenance` <- read.table("~/Desktop/STA 108/copier+maintenance.txt", quote="\"", comment.char="")
View(`copier+maintenance`)
knitr::opts_chunk$set(echo = TRUE)
copier <- read.table("copier+maintenance.txt")
getwd()
copier <- read.table("copier+maintenance.txt")
getwd()
getwd()
copier <- read.table("copier+maintenance.txt")
Y = data1[,1]
Y = copier[,1]
X = copier[,2]
n = length(X)
X
Y = copier[,1]
X = copier[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
alpha=0.05
B= qt(1-alpha/4,n-2)
c(b0hat-B*se.b0hat, b0hat+B*se.b0hat)
Y = copier[,1]
X = copier[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
alpha=0.05
B= qt(1-alpha/4,n-2)
c(b0hat-B*se.b0hat, b0hat+B*se.b0hat)
c(b1hat-B*se.b1hat, b1hat+B*se.b1hat
Y = copier[,1]
X = copier[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
alpha=0.05
B= qt(1-alpha/4,n-2)
c(b0hat-B*se.b0hat, b0hat+B*se.b0hat)
c(b1hat-B*se.b1hat, b1hat+B*se.b1hat)
copier <- read.table("copier+maintenance.txt")
plastic <- read.table("plastic+hardness")
copier <- read.table("copier+maintenance.txt")
plastic <- read.table("plastic+hardness.txt")
copier <- read.table("copier+maintenance.txt")
plastic <- read.table("plastic+hardness.txt")
View(plastic)
Y = plastic[,1]
X = plastic[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
xh = c(20,30,40)
g=length(xh)
yhat = b0hat + b1hat*xh
se.yhat = sqrt(mse*(1/n+ (xh - mean(X))^2/sum((X - mean(X))^2)))
alpha = .90
B= qt(1-alpha/(2*g), n-2)
library(knitr)
CI.b = data.frame(xh, yhat, lower=yhat-B*se.yhat,upper=yhat+B*se.yhat)
kable(CI.b,caption = "Bonferroni Confidence intervals for mean response")
Y = plastic[,1]
X = plastic[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
xh = c(20,30,40)
g=length(xh)
yhat = b0hat + b1hat*xh
se.yhat = sqrt(mse*(1/n+ (xh - mean(X))^2/sum((X - mean(X))^2)))
alpha = .90
B= qt(1-alpha/(2*g), n-2)
library(knitr)
CI.b = data.frame(xh, yhat, lower=yhat-B*se.yhat,upper=yhat+B*se.yhat)
CI.b,caption = "Bonferroni Confidence intervals for mean response"
Y = plastic[,1]
X = plastic[,2]
n = length(X)
fit=lm(Y~X)
b0hat = fit$coefficients[[1]]
b1hat = fit$coefficients[[2]]
mse= summary(fit)$sigma^2
se.b0hat= sqrt(mse*(1/n+ mean(X)^2/sum((X - mean(X))^2)))
se.b1hat = sqrt(mse/sum((X-mean(X))^2))
xh = c(20,30,40)
g=length(xh)
yhat = b0hat + b1hat*xh
se.yhat = sqrt(mse*(1/n+ (xh - mean(X))^2/sum((X - mean(X))^2)))
alpha = .90
B= qt(1-alpha/(2*g), n-2)
library(knitr)
CI.b = data.frame(xh, yhat, lower=yhat-B*se.yhat,upper=yhat+B*se.yhat)
kable(CI.b,caption = "Bonferroni Confidence intervals for mean response")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
View(spider_list)
spider_list[[3]]
class(spider_list[[3]])
glimpse(spider_list)
glimpse(spider_list[[5]])
glimpse(spider_list[[5]])
names(spider_list[[5]])
glimpse(spider_list[[15]])
names(spider_list[[15]])
glimpse(spider_list[[15]])
names(spider_list[[15]])
spider_list[[15]]
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list
spider_list[3]
spider_list[[3]]
spider_list$Butte
spider_list %>%
filter(names == "Butte")
spider_list$Butte
View(spider_list)
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
names(table_B)
join_type(table_A, table_B, by="customer_ID")
join_type(table_A, table_B, by= customer_ID)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
join_dbl(table_A, table_B, by=columnTojoinOn)
spider_list$Butte
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
View(spiders_locs)
View(spiders_all)
spider_tot <- semi_join(spider_all, spider_locs, by "Accession")
spider_tot <- full_join(spider_all, spider_locs, by "Accession")
spider_tot <- semi_join(spiders_all, spiders_locs, by "Accession")
spider_tot <- semi_join(spiders_all, spiders_locs, by = "Accession")
spider_tot <- semi_join(spiders_all, spiders_locs, by = "Accession")
spider_tot
spider_tot <- full_join(spiders_all, spiders_locs, by = "Accession")
spider_tot
spider_tot <- semi_join(spiders_all, spiders_locs, by = "Accession")
spider_tot
spider_tot <- anti_join(spiders_all, spiders_locs, by = "Accession")
spider_tot
spider_tot <- full_join(spiders_all, spiders_locs, by = "Accession")
spider_tot
spider_tot <- full_join(spiders_all, spiders_locs, by = c("Accession"))
spider_tot
spiders_with_locst <- full_join(spiders_all, spiders_locs, by = c("Accession"))
spiders_with_locs
spider_tot <- full_join(spiders_all, spiders_locs, by = c("Accession"))
spider_tot
class(spider_tot$Date)
day <- today()
day <- today()
day
str(day)
datetime <- now()
datetime
dmy(spider_tot$Date)
as.Date(spider_tot$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
ymd(dateformat1)
dmy(dateformat2)
dmy(dateformat2)
mdy(dateformat3)
ymd(dateformat3)
dmy(dateformat2)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hma(dateformat5)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
write.csv(spiders_tot, file = "spiders_with_locs.csv", row.names = FALSE)
write.csv(spider_tot, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
#library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("devtools")
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("devtools")
library(devtools)
#devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("remotes")
#remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
